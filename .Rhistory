library(magrittr)
library(dplyr)
library(stringr)
Data_organized <- readRDS('Map Toronto/Shiny/Data_organized.RDS')
#MAke nicer names for the
names(Data_organized) %<>% str_replace_all('Total number of ', '') %>%
str_replace_all('total ', '') %>%
str_replace_all('Total ', '') %>%
str_replace_all('- ', '') %>%
str_to_title
#Create the columns with the attributes
Attributes <- lapply(Data_organized, colnames)
Attributes_level <- data.frame()
for(i in 1:length(Attributes)){
Aux_df <- data.frame(names(Attributes)[i], Attributes[[i]] )
Attributes_level %<>% rbind(Aux_df)
}
colnames(Attributes_level) <- c('Description', 'Attribute')
#Delete useless_rows
Attributes_level %<>% filter(!Attribute%in%c("SCODE_NAME", 'Total'))
head(Attributes_level)
head(Attributes_level,10)
head(Attributes_level,30)
tail(Attributes_level,30)
Attributes_level %<>%
filter(!Attribute%in%c("SCODE_NAME", 'Total')) %>%
#Add the Categories
mutate(
Category <- if_else(grep('Income',Description), 'Income', 'Other')
)
tail(Attributes_level,30)
Attributes_level %<>%
filter(!Attribute%in%c("SCODE_NAME", 'Total')) %>%
#Add the Categories
mutate(
Category = if_else(grep('Income',Description), 'Income', 'Other')
)
Attributes_level %<>%
filter(!Attribute%in%c("SCODE_NAME", 'Total')) %>%
#Add the Categories
mutate(
Category = ifelse(grep('Income',Description), 'Income', 'Other')
)
Attributes_level %<>%
filter(!Attribute%in%c("SCODE_NAME", 'Total')) %>%
#Add the Categories
mutate(
Category = ifelse(grepl('Income',Description), 'Income', 'Other')
)
tail(Attributes_level,30)
other(Attributes_level,30)
head(Attributes_level,30)
saveRDS(Attributes_levels,'Map Toronto/Shiny/Attributes.RDS')
saveRDS(Attributes_level,'Map Toronto/Shiny/Attributes.RDS')
runApp('Map Toronto/Toronto_languages')
Attributes_level
Attributes_level %>% head
runApp('Map Toronto/Toronto_languages')
install.packages('shinythemes')
runApp('Map Toronto/Toronto_languages')
library(readxl)
library(magrittr)
library(rgdal)
library(tidyverse)
#1.- Read Map data this has to be done only once
Map <- readOGR("Map Toronto/Ward 2","icitw_wgs84")
head(Map@data)
h <- fortify(Map)
head(h)
Map <- readOGR("Map Toronto/Ward 2","icitw_wgs84")
Mpa_figute <- fortify(Map)
Map_figute <- fortify(Map)
Data <- Map@data
Map_figute <- fortify(Map)
#Add the stats to the map data
Map_figure %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
Data <- Map@data
Map_figure <- fortify(Map)
#Add the stats to the map data
Map_figure %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
Data <- Map@data
Map_figure <- fortify(Map, region ='SCODE_NAME')
Map_figure$id %<>% as.numeric
Map_figure %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
class(Map$SCODE_NAME)
options(stringsAsFactors = F)
Map <- readOGR("Map Toronto/Ward 2","icitw_wgs84")
Data <- Map@data
Map_figure <- fortify(Map, region ='SCODE_NAME')
Map_figure$id %<>% as.numeric
Map_figure %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
class(Map$SCODE_NAME)
Data$SCODE_NAME %<>% as.numeric
Map <- readOGR("Map Toronto/Ward 2","icitw_wgs84")
Data <- Map@data
Data$SCODE_NAME %<>% as.numeric
Map_figure <- fortify(Map, region ='SCODE_NAME')
Map_figure$id %<>% as.numeric
#Add the stats to the map data
Map_figure %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
cnames <- aggregate(cbind(long, lat) ~ NAME, data=Map_draw,
FUN=function(x) mean(range(x)))
cnames$New_Name <- gsub(pattern = " *\\(.*?\\) *",
x = cnames$NAME, replacement = '')
cnames$New_Name <- gsub(pattern = "-",
x = cnames$New_Name, replacement = '\n')
cnames$New_Name <- gsub(pattern = ' ',
x = cnames$New_Name, replacement = '\n')
cnames %<>% group_by(New_Name) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
saveRDS(cnames, 'Map Toronto/Shiny/cnames.RDS')
runApp('Map Toronto/Toronto_languages')
cnames
library(magrittr)
library(dplyr)
options(stringsAsFactors = F)
Map <- readOGR("Map Toronto/Ward 2","icitw_wgs84")
Data <- Map@data
Data$SCODE_NAME %<>% as.numeric
Map_figure <- fortify(Map, region ='SCODE_NAME')
Map_figure$id %<>% as.numeric
head(Map_figure)
Map_figure %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
cnames <- aggregate(cbind(long, lat) ~ NAME, data=Map_draw,
FUN=function(x) mean(range(x)))
cnames <- aggregate(cbind(long, lat) ~ NAME, data=Map_figure,
FUN=function(x) mean(range(x)))
cnames$New_Name <- gsub(pattern = " *\\(.*?\\) *",
x = cnames$NAME, replacement = '')
cnames$New_Name <- gsub(pattern = "-",
x = cnames$New_Name, replacement = '\n')
cnames$New_Name <- gsub(pattern = ' ',
x = cnames$New_Name, replacement = '\n')
cnames %<>% group_by(New_Name) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
saveRDS(cnames, 'Map Toronto/Shiny/cnames.RDS')
cnames
Map_figure
Map_figure %>% head
cnames <- aggregate(cbind(long, lat) ~ NAME, data=Map_figure,
FUN=function(x) mean(range(x)))
head(cnames)
cnames$New_Name <- gsub(pattern = " *\\(.*?\\) *",
x = cnames$NAME, replacement = '')
head(cnames)
?aggregate
#----------------------------------------------------------------------
#                   Labels for each war, making them much nicer
#----------------------------------------------------------------------
library(magrittr)
library(dplyr)
options(stringsAsFactors = F)
Map <- readOGR("Map Toronto/Ward 2","icitw_wgs84")
Data <- Map@data
Data$SCODE_NAME %<>% as.numeric
Map_figure <- fortify(Map, region ='SCODE_NAME')
Map_figure$id %<>% as.numeric
#Add the stats to the map data
Map_figure %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
#Aggregate data to get mean latitude and mean longitude for each state
cnames <- aggregate(cbind(long, lat) ~ NAME, data=Map_figure,
FUN=function(x) mean(range(x)))
cnames$New_Name <- gsub(pattern = " *\\(.*?\\) *",
x = cnames$NAME, replacement = '')
cnames$New_Name <- gsub(pattern = "-",
x = cnames$New_Name, replacement = '\n')
cnames$New_Name <- gsub(pattern = ' ',
x = cnames$New_Name, replacement = '\n')
cnames %<>% group_by(New_Name) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
saveRDS(cnames, 'Map Toronto/Shiny/cnames.RDS')
cnames
#Aggregate data to get mean latitude and mean longitude for each state
cnames <- aggregate(cbind(long, lat) ~ NAME, data=Map_figure,
FUN=function(x) mean(range(x)))
cnames$New_Name <- gsub(pattern = " *\\(.*?\\) *",
x = cnames$NAME, replacement = '')
cnames$New_Name <- gsub(pattern = "-",
x = cnames$New_Name, replacement = '\n')
cnames$New_Name <- gsub(pattern = ' ',
x = cnames$New_Name, replacement = '\n')
cnames
cnames %>% group_by(New_Name) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
sapply(cnames.class\)
sapply(cnames.class)
sapply(cnames,class)
cnames %>% group_by_('New_Name') %>%
summarise(
long = mean(long),
lat = mean(lat)
)
cnames %>% group_by_(NAME) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
cnames
colnames(cnames)
cnames %>% group_by(NAME) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
table(cnames$New_Name)
cnames %>% group_by(New_Name) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
cnames %>% group_by(New_Name) %>%
summarise_(
long = mean(long),
lat = mean(lat)
)
cnames %>% group_by(New_Name) %>%
summarize(
long = mean(long),
lat = mean(lat)
)
cnames %>% group_by(New_Name) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
mean(cnames$long)
?group_by
cnames %>% group_by(New_Name)
cnames %>% dplyr::group_by(New_Name) %>%
summarise(
long = mean(long),
lat = mean(lat)
)
cnames %>% dplyr::group_by(New_Name) %>%
dplyr::summarise(
long = mean(long),
lat = mean(lat)
)
saveRDS(cnames, 'Map Toronto/Shiny/cnames.RDS')
runApp('Map Toronto/Toronto_languages')
---------------------------------------------------------------
library(magrittr)
library(dplyr)
library(stringr)
Data_organized <- readRDS('Map Toronto/Shiny/Data_organized.RDS')
#MAke nicer names for the
names(Data_organized) %<>% str_replace_all('Total number of ', '') %>%
str_replace_all('total ', '') %>%
str_replace_all('Total ', '') %>%
str_replace_all('- ', '') %>%
str_to_title
#Modify each list element for more interesting data
#Householders info amount
Data_organized[[3]] %<>%
mutate(
Average = (`1 household maintainer` + `2 household maintainers` * 2 +
`3 or more household maintainers` * 3.05)/100
)
#Householders info age
Data_organized[[4]] %<>%
mutate(
Median = (`25 to 34 years` * 30 + `35 to 44 years` * 40 +
`45 to 54 years` * 50 + `55 to 64 years` * 60 +
`65 to 74 years` * 70 + `75 years and over` * 77 +
`Under 25 years` * 22) / 100
)
#Imigration year
Data_organized[[6]] %<>% mutate(
`Most common year period` = (`1971 to 1980` * 1975 +
`1981 to 1990` * 1985 +
`1991 to 2000` * 1995 +
`2001 to 2005` * 2002.5 +
`2006 to 2011` * 2008 +
`Before 1971` * 1968) /100,
sum = `1971 to 1980` +
`1981 to 1990` +
`1991 to 2000` +
`2001 to 2005` +
`2006 to 2011` +
`Before 1971`)
Data_organized %>% colnames
Data_organized %>% names
Data_organized[[20]]
Data_organized[[13]] <- NULL
Data_organized %>% names
Data_organized[[13]] <- NULL
Data_organized[[12]] <- NULL
Data_organized[[11]] <- NULL
saveRDS(Data_divided[[1:6]], 'Map Toronto/Shiny/Data_organized_clean.RDS')
Data_divided[[1:6]]
saveRDS(head(Data_divided,6),
'Map Toronto/Shiny/Data_organized_clean.RDS')
library(magrittr)
library(dplyr)
library(stringr)
Data_organized <- readRDS('Map Toronto/Shiny/Data_organized_clean.RDS')
#MAke nicer names for the
names(Data_organized) %<>% str_replace_all('Total number of ', '') %>%
str_replace_all('total ', '') %>%
str_replace_all('Total ', '') %>%
str_replace_all('- ', '') %>%
str_to_title
#Create the columns with the attributes
Attributes <- lapply(Data_organized, colnames)
Attributes_level <- data.frame()
for(i in 1:length(Attributes)){
Aux_df <- data.frame(names(Attributes)[i], Attributes[[i]] )
Attributes_level %<>% rbind(Aux_df)
}
colnames(Attributes_level) <- c('Description', 'Attribute')
Attributes_level
head(Data_organized)
library(magrittr)
library(dplyr)
library(stringr)
Data_organized <- readRDS('Map Toronto/Shiny/Data_organized.RDS')
head(Data_organized)
#MAke nicer names for the
names(Data_organized) %<>% str_replace_all('Total number of ', '') %>%
str_replace_all('total ', '') %>%
str_replace_all('Total ', '') %>%
str_replace_all('- ', '') %>%
str_to_title
#Delete uninformative list elements
Data_organized[[13]] <- NULL
Data_organized[[12]] <- NULL
Data_organized[[11]] <- NULL
#Modify each list element for more interesting data
#Householders info amount
Data_organized[[3]] %<>%
mutate(
Average = (`1 household maintainer` + `2 household maintainers` * 2 +
`3 or more household maintainers` * 3.05)/100
)
#Householders info age
Data_organized[[4]] %<>%
mutate(
Median = (`25 to 34 years` * 30 + `35 to 44 years` * 40 +
`45 to 54 years` * 50 + `55 to 64 years` * 60 +
`65 to 74 years` * 70 + `75 years and over` * 77 +
`Under 25 years` * 22) / 100
)
#Imigration year
Data_organized[[6]] %<>% mutate(
`Most common year period` = (`1971 to 1980` * 1975 +
`1981 to 1990` * 1985 +
`1991 to 2000` * 1995 +
`2001 to 2005` * 2002.5 +
`2006 to 2011` * 2008 +
`Before 1971` * 1968) /100,
sum = `1971 to 1980` +
`1981 to 1990` +
`1991 to 2000` +
`2001 to 2005` +
`2006 to 2011` +
`Before 1971`)
saveRDS(head(Data_organized,6),
'Map Toronto/Shiny/Data_organized_clean.RDS')
#----------------------------------------------------------------------
#           Get the interesting attributes from  data_organized
#----------------------------------------------------------------------
library(magrittr)
library(dplyr)
library(stringr)
Data_organized <- readRDS('Map Toronto/Shiny/Data_organized.RDS')
#MAke nicer names for the
names(Data_organized) %<>% str_replace_all('Total number of ', '') %>%
str_replace_all('total ', '') %>%
str_replace_all('Total ', '') %>%
str_replace_all('- ', '') %>%
str_to_title
#Delete uninformative list elements
Data_organized[[13]] <- NULL
Data_organized[[12]] <- NULL
Data_organized[[11]] <- NULL
#Modify each list element for more interesting data
#Householders info amount
Data_organized[[3]] %<>%
mutate(
Average = (`1 household maintainer` + `2 household maintainers` * 2 +
`3 or more household maintainers` * 3.05)/100
)
#Householders info age
Data_organized[[4]] %<>%
mutate(
Median = (`25 to 34 years` * 30 + `35 to 44 years` * 40 +
`45 to 54 years` * 50 + `55 to 64 years` * 60 +
`65 to 74 years` * 70 + `75 years and over` * 77 +
`Under 25 years` * 22) / 100
)
#Imigration year
Data_organized[[6]] %<>% mutate(
`Most common year period` = (`1971 to 1980` * 1975 +
`1981 to 1990` * 1985 +
`1991 to 2000` * 1995 +
`2001 to 2005` * 2002.5 +
`2006 to 2011` * 2008 +
`Before 1971` * 1968) /100,
sum = `1971 to 1980` +
`1981 to 1990` +
`1991 to 2000` +
`2001 to 2005` +
`2006 to 2011` +
`Before 1971`)
##############              Not done ##########################
#Get an example to  work for the front end
saveRDS(head(Data_organized,6),
'Map Toronto/Shiny/Data_organized_clean.RDS')
library(magrittr)
library(dplyr)
library(stringr)
Data_organized <- readRDS('Map Toronto/Shiny/Data_organized_clean.RDS')
#MAke nicer names for the
names(Data_organized) %<>% str_replace_all('Total number of ', '') %>%
str_replace_all('total ', '') %>%
str_replace_all('Total ', '') %>%
str_replace_all('- ', '') %>%
str_to_title
#Create the columns with the attributes
Attributes <- lapply(Data_organized, colnames)
Attributes_level <- data.frame()
for(i in 1:length(Attributes)){
Aux_df <- data.frame(names(Attributes)[i], Attributes[[i]] )
Attributes_level %<>% rbind(Aux_df)
}
colnames(Attributes_level) <- c('Description', 'Attribute')
Attributes_level
#Delete useless_rows
Attributes_level %<>%
filter(!Attribute%in%c("SCODE_NAME", 'Total'))
Attributes_level
Data_organized[[6]]
Data_organized[[6]] %>% data.frame %>% head()
hm <- Data_organized[[6]] %>% data.frame %>% head()
hm <- Data_organized[[6]] %>% data.frame
colnames(hm) <- colnames(Data_organized[[6]])
hm
library(readxl)
library(magrittr)
library(rgdal)
library(tidyverse)
#1.- Read Map data this has to be done only once
Map <- readOGR("Map Toronto/Ward 2","icitw_wgs84")
Data_organized <- readRDS( 'Map Toronto/Shiny/Data_organized_clean.RDS')
#2.-Join the data
Map$SCODE_NAME %<>% as.character  %>% as.numeric
for(i in 1:length(Data_organized)){
Aux <- Data_organized[[i]]
colnames(Aux) <- colnames(Data_organized[[i]])
Map@data %<>% left_join(Aux, by = 'SCODE_NAME')
}
head(Map@data)
#Transform polygon data into a data.frame
Map %<>% spTransform(CRS("+proj=longlat +datum=WGS84"))
Map_draw <- fortify(Map, region ='SCODE_NAME')
Map_draw$id %<>% as.numeric
Data <- Map@data
#Add the stats to the map data
Map_draw %<>% left_join( Data,
by = c('id'='SCODE_NAME'))
saveRDS(Map_draw, 'Map Toronto/Shiny/Map_draw.RDS')
runApp('Map Toronto/Toronto_languages')
?plotOutput
runApp('Map Toronto/Toronto_languages')
library(magrittr)
library(dplyr)
library(stringr)
Data_organized <- readRDS('Map Toronto/Shiny/Data_organized_clean.RDS')
#MAke nicer names for the
names(Data_organized) %<>% str_replace_all('Total number of ', '') %>%
str_replace_all('total ', '') %>%
str_replace_all('Total ', '') %>%
str_replace_all('- ', '') %>%
str_to_title
Attributes <- lapply(Data_organized, colnames)
Attributes
runApp('Map Toronto/Toronto_languages')
Attributes <- lapply(Data_organized, function(x){
colnames(x)[!colnames %in% c("SCODE_NAME", 'Total')]
})
colnames(x)[!colnames(x) %in% c("SCODE_NAME", 'Total')]
Attributes <- lapply(Data_organized, function(x){
colnames(x)[!colnames(x) %in% c("SCODE_NAME", 'Total')]
})
Attributes
saveRDS(Attributes,'Map Toronto/Shiny/Attributes.RDS')
runApp('Map Toronto/Toronto_languages')
Attributes[['fk']]
Attributes[[1]]
Attributes %>% head
runApp('Map Toronto/Toronto_languages')
runApp('~/Time_series_stats/Time series stats')
runApp('Map Toronto/Toronto_languages')
